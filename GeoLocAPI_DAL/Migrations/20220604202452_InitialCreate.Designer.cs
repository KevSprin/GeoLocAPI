// <auto-generated />
using System;
using GeoLocAPI_DAL.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeoLocAPI_DAL.Migrations
{
    [DbContext(typeof(GeoLocDbContext))]
    [Migration("20220604202452_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GeoLocAPI_Domain.Models.GeoLocationData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContinentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContinentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GeoLocations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("65ebc216-74b4-4e2a-8527-d1f870eea3e4"),
                            CountryCode = "No code",
                            CountryName = "No name",
                            HostAddress = "127.0.0.1"
                        });
                });

            modelBuilder.Entity("GeoLocAPI_Domain.Models.LoginModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoginModels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e271c897-cf27-4e2e-b80d-69cce9d79e45"),
                            Password = "$2b$10$WibErh/bDXtrdWxh/OkjpuJpE6JYtuMxUiEexcycimIz9fgQV5jTy",
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("50e66a5f-61a6-457d-9cba-b9d3e5430bd3"),
                            Password = "$2b$10$bDz8iRZjG3zfJdi2nBezBe1UKYIuBbb/uRCUnH67mRAujtDR4LO0q",
                            Username = "user1"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
